package com.huateng.blue.work;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class SignRecordExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table sign_record
     *
     * @ibatorgenerated Tue Nov 01 09:58:54 CST 2011
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table sign_record
     *
     * @ibatorgenerated Tue Nov 01 09:58:54 CST 2011
     */
    protected List oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table sign_record
     *
     * @ibatorgenerated Tue Nov 01 09:58:54 CST 2011
     */
    public SignRecordExample() {
        oredCriteria = new ArrayList();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table sign_record
     *
     * @ibatorgenerated Tue Nov 01 09:58:54 CST 2011
     */
    protected SignRecordExample(SignRecordExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table sign_record
     *
     * @ibatorgenerated Tue Nov 01 09:58:54 CST 2011
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table sign_record
     *
     * @ibatorgenerated Tue Nov 01 09:58:54 CST 2011
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table sign_record
     *
     * @ibatorgenerated Tue Nov 01 09:58:54 CST 2011
     */
    public List getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table sign_record
     *
     * @ibatorgenerated Tue Nov 01 09:58:54 CST 2011
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table sign_record
     *
     * @ibatorgenerated Tue Nov 01 09:58:54 CST 2011
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table sign_record
     *
     * @ibatorgenerated Tue Nov 01 09:58:54 CST 2011
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table sign_record
     *
     * @ibatorgenerated Tue Nov 01 09:58:54 CST 2011
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table sign_record
     *
     * @ibatorgenerated Tue Nov 01 09:58:54 CST 2011
     */
    public static class Criteria {
        protected List criteriaWithoutValue;

        protected List criteriaWithSingleValue;

        protected List criteriaWithListValue;

        protected List criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList();
            criteriaWithSingleValue = new ArrayList();
            criteriaWithListValue = new ArrayList();
            criteriaWithBetweenValue = new ArrayList();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List list = new ArrayList();
            list.add(value1);
            list.add(value2);
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andRecordDateIsNull() {
            addCriterion("RECORD_DATE is null");
            return this;
        }

        public Criteria andRecordDateIsNotNull() {
            addCriterion("RECORD_DATE is not null");
            return this;
        }

        public Criteria andRecordDateEqualTo(String value) {
            addCriterion("RECORD_DATE =", value, "recordDate");
            return this;
        }

        public Criteria andRecordDateNotEqualTo(String value) {
            addCriterion("RECORD_DATE <>", value, "recordDate");
            return this;
        }

        public Criteria andRecordDateGreaterThan(String value) {
            addCriterion("RECORD_DATE >", value, "recordDate");
            return this;
        }

        public Criteria andRecordDateGreaterThanOrEqualTo(String value) {
            addCriterion("RECORD_DATE >=", value, "recordDate");
            return this;
        }

        public Criteria andRecordDateLessThan(String value) {
            addCriterion("RECORD_DATE <", value, "recordDate");
            return this;
        }

        public Criteria andRecordDateLessThanOrEqualTo(String value) {
            addCriterion("RECORD_DATE <=", value, "recordDate");
            return this;
        }

        public Criteria andRecordDateLike(String value) {
            addCriterion("RECORD_DATE like", value, "recordDate");
            return this;
        }

        public Criteria andRecordDateNotLike(String value) {
            addCriterion("RECORD_DATE not like", value, "recordDate");
            return this;
        }

        public Criteria andRecordDateIn(List values) {
            addCriterion("RECORD_DATE in", values, "recordDate");
            return this;
        }

        public Criteria andRecordDateNotIn(List values) {
            addCriterion("RECORD_DATE not in", values, "recordDate");
            return this;
        }

        public Criteria andRecordDateBetween(String value1, String value2) {
            addCriterion("RECORD_DATE between", value1, value2, "recordDate");
            return this;
        }

        public Criteria andRecordDateNotBetween(String value1, String value2) {
            addCriterion("RECORD_DATE not between", value1, value2, "recordDate");
            return this;
        }

        public Criteria andRecordTypeIsNull() {
            addCriterion("RECORD_TYPE is null");
            return this;
        }

        public Criteria andRecordTypeIsNotNull() {
            addCriterion("RECORD_TYPE is not null");
            return this;
        }

        public Criteria andRecordTypeEqualTo(String value) {
            addCriterion("RECORD_TYPE =", value, "recordType");
            return this;
        }

        public Criteria andRecordTypeNotEqualTo(String value) {
            addCriterion("RECORD_TYPE <>", value, "recordType");
            return this;
        }

        public Criteria andRecordTypeGreaterThan(String value) {
            addCriterion("RECORD_TYPE >", value, "recordType");
            return this;
        }

        public Criteria andRecordTypeGreaterThanOrEqualTo(String value) {
            addCriterion("RECORD_TYPE >=", value, "recordType");
            return this;
        }

        public Criteria andRecordTypeLessThan(String value) {
            addCriterion("RECORD_TYPE <", value, "recordType");
            return this;
        }

        public Criteria andRecordTypeLessThanOrEqualTo(String value) {
            addCriterion("RECORD_TYPE <=", value, "recordType");
            return this;
        }

        public Criteria andRecordTypeLike(String value) {
            addCriterion("RECORD_TYPE like", value, "recordType");
            return this;
        }

        public Criteria andRecordTypeNotLike(String value) {
            addCriterion("RECORD_TYPE not like", value, "recordType");
            return this;
        }

        public Criteria andRecordTypeIn(List values) {
            addCriterion("RECORD_TYPE in", values, "recordType");
            return this;
        }

        public Criteria andRecordTypeNotIn(List values) {
            addCriterion("RECORD_TYPE not in", values, "recordType");
            return this;
        }

        public Criteria andRecordTypeBetween(String value1, String value2) {
            addCriterion("RECORD_TYPE between", value1, value2, "recordType");
            return this;
        }

        public Criteria andRecordTypeNotBetween(String value1, String value2) {
            addCriterion("RECORD_TYPE not between", value1, value2, "recordType");
            return this;
        }

        public Criteria andUserIdIsNull() {
            addCriterion("USER_ID is null");
            return this;
        }

        public Criteria andUserIdIsNotNull() {
            addCriterion("USER_ID is not null");
            return this;
        }

        public Criteria andUserIdEqualTo(String value) {
            addCriterion("USER_ID =", value, "userId");
            return this;
        }

        public Criteria andUserIdNotEqualTo(String value) {
            addCriterion("USER_ID <>", value, "userId");
            return this;
        }

        public Criteria andUserIdGreaterThan(String value) {
            addCriterion("USER_ID >", value, "userId");
            return this;
        }

        public Criteria andUserIdGreaterThanOrEqualTo(String value) {
            addCriterion("USER_ID >=", value, "userId");
            return this;
        }

        public Criteria andUserIdLessThan(String value) {
            addCriterion("USER_ID <", value, "userId");
            return this;
        }

        public Criteria andUserIdLessThanOrEqualTo(String value) {
            addCriterion("USER_ID <=", value, "userId");
            return this;
        }

        public Criteria andUserIdLike(String value) {
            addCriterion("USER_ID like", value, "userId");
            return this;
        }

        public Criteria andUserIdNotLike(String value) {
            addCriterion("USER_ID not like", value, "userId");
            return this;
        }

        public Criteria andUserIdIn(List values) {
            addCriterion("USER_ID in", values, "userId");
            return this;
        }

        public Criteria andUserIdNotIn(List values) {
            addCriterion("USER_ID not in", values, "userId");
            return this;
        }

        public Criteria andUserIdBetween(String value1, String value2) {
            addCriterion("USER_ID between", value1, value2, "userId");
            return this;
        }

        public Criteria andUserIdNotBetween(String value1, String value2) {
            addCriterion("USER_ID not between", value1, value2, "userId");
            return this;
        }

        public Criteria andRecordTimeIsNull() {
            addCriterion("RECORD_TIME is null");
            return this;
        }

        public Criteria andRecordTimeIsNotNull() {
            addCriterion("RECORD_TIME is not null");
            return this;
        }

        public Criteria andRecordTimeEqualTo(String value) {
            addCriterion("RECORD_TIME =", value, "recordTime");
            return this;
        }

        public Criteria andRecordTimeNotEqualTo(String value) {
            addCriterion("RECORD_TIME <>", value, "recordTime");
            return this;
        }

        public Criteria andRecordTimeGreaterThan(String value) {
            addCriterion("RECORD_TIME >", value, "recordTime");
            return this;
        }

        public Criteria andRecordTimeGreaterThanOrEqualTo(String value) {
            addCriterion("RECORD_TIME >=", value, "recordTime");
            return this;
        }

        public Criteria andRecordTimeLessThan(String value) {
            addCriterion("RECORD_TIME <", value, "recordTime");
            return this;
        }

        public Criteria andRecordTimeLessThanOrEqualTo(String value) {
            addCriterion("RECORD_TIME <=", value, "recordTime");
            return this;
        }

        public Criteria andRecordTimeLike(String value) {
            addCriterion("RECORD_TIME like", value, "recordTime");
            return this;
        }

        public Criteria andRecordTimeNotLike(String value) {
            addCriterion("RECORD_TIME not like", value, "recordTime");
            return this;
        }

        public Criteria andRecordTimeIn(List values) {
            addCriterion("RECORD_TIME in", values, "recordTime");
            return this;
        }

        public Criteria andRecordTimeNotIn(List values) {
            addCriterion("RECORD_TIME not in", values, "recordTime");
            return this;
        }

        public Criteria andRecordTimeBetween(String value1, String value2) {
            addCriterion("RECORD_TIME between", value1, value2, "recordTime");
            return this;
        }

        public Criteria andRecordTimeNotBetween(String value1, String value2) {
            addCriterion("RECORD_TIME not between", value1, value2, "recordTime");
            return this;
        }

        public Criteria andIsModifiedIsNull() {
            addCriterion("IS_MODIFIED is null");
            return this;
        }

        public Criteria andIsModifiedIsNotNull() {
            addCriterion("IS_MODIFIED is not null");
            return this;
        }

        public Criteria andIsModifiedEqualTo(String value) {
            addCriterion("IS_MODIFIED =", value, "isModified");
            return this;
        }

        public Criteria andIsModifiedNotEqualTo(String value) {
            addCriterion("IS_MODIFIED <>", value, "isModified");
            return this;
        }

        public Criteria andIsModifiedGreaterThan(String value) {
            addCriterion("IS_MODIFIED >", value, "isModified");
            return this;
        }

        public Criteria andIsModifiedGreaterThanOrEqualTo(String value) {
            addCriterion("IS_MODIFIED >=", value, "isModified");
            return this;
        }

        public Criteria andIsModifiedLessThan(String value) {
            addCriterion("IS_MODIFIED <", value, "isModified");
            return this;
        }

        public Criteria andIsModifiedLessThanOrEqualTo(String value) {
            addCriterion("IS_MODIFIED <=", value, "isModified");
            return this;
        }

        public Criteria andIsModifiedLike(String value) {
            addCriterion("IS_MODIFIED like", value, "isModified");
            return this;
        }

        public Criteria andIsModifiedNotLike(String value) {
            addCriterion("IS_MODIFIED not like", value, "isModified");
            return this;
        }

        public Criteria andIsModifiedIn(List values) {
            addCriterion("IS_MODIFIED in", values, "isModified");
            return this;
        }

        public Criteria andIsModifiedNotIn(List values) {
            addCriterion("IS_MODIFIED not in", values, "isModified");
            return this;
        }

        public Criteria andIsModifiedBetween(String value1, String value2) {
            addCriterion("IS_MODIFIED between", value1, value2, "isModified");
            return this;
        }

        public Criteria andIsModifiedNotBetween(String value1, String value2) {
            addCriterion("IS_MODIFIED not between", value1, value2, "isModified");
            return this;
        }

        public Criteria andModifyUserIsNull() {
            addCriterion("MODIFY_USER is null");
            return this;
        }

        public Criteria andModifyUserIsNotNull() {
            addCriterion("MODIFY_USER is not null");
            return this;
        }

        public Criteria andModifyUserEqualTo(String value) {
            addCriterion("MODIFY_USER =", value, "modifyUser");
            return this;
        }

        public Criteria andModifyUserNotEqualTo(String value) {
            addCriterion("MODIFY_USER <>", value, "modifyUser");
            return this;
        }

        public Criteria andModifyUserGreaterThan(String value) {
            addCriterion("MODIFY_USER >", value, "modifyUser");
            return this;
        }

        public Criteria andModifyUserGreaterThanOrEqualTo(String value) {
            addCriterion("MODIFY_USER >=", value, "modifyUser");
            return this;
        }

        public Criteria andModifyUserLessThan(String value) {
            addCriterion("MODIFY_USER <", value, "modifyUser");
            return this;
        }

        public Criteria andModifyUserLessThanOrEqualTo(String value) {
            addCriterion("MODIFY_USER <=", value, "modifyUser");
            return this;
        }

        public Criteria andModifyUserLike(String value) {
            addCriterion("MODIFY_USER like", value, "modifyUser");
            return this;
        }

        public Criteria andModifyUserNotLike(String value) {
            addCriterion("MODIFY_USER not like", value, "modifyUser");
            return this;
        }

        public Criteria andModifyUserIn(List values) {
            addCriterion("MODIFY_USER in", values, "modifyUser");
            return this;
        }

        public Criteria andModifyUserNotIn(List values) {
            addCriterion("MODIFY_USER not in", values, "modifyUser");
            return this;
        }

        public Criteria andModifyUserBetween(String value1, String value2) {
            addCriterion("MODIFY_USER between", value1, value2, "modifyUser");
            return this;
        }

        public Criteria andModifyUserNotBetween(String value1, String value2) {
            addCriterion("MODIFY_USER not between", value1, value2, "modifyUser");
            return this;
        }
    }
}